# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2019-06-25 12:59
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.IntegerField(primary_key=True, serialize=False)),
                ('address_name', models.CharField(blank=True, max_length=200, null=True)),
                ('address_tel', models.CharField(blank=True, max_length=200, null=True)),
                ('address_provice', models.CharField(blank=True, max_length=200, null=True)),
                ('address_detail', models.CharField(blank=True, max_length=400, null=True)),
                ('address_code', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('permission_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('content_type_id', models.IntegerField()),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField()),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=75)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('group_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('permission_id', models.IntegerField()),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.IntegerField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(blank=True, max_length=200, null=True)),
                ('category_parent', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.IntegerField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(blank=True, max_length=200, null=True)),
                ('city_sortkey', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.IntegerField(primary_key=True, serialize=False)),
                ('comment_conent', models.CharField(blank=True, max_length=400, null=True)),
                ('comment_time', models.CharField(blank=True, max_length=100, null=True)),
                ('comment_star', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
                ('content_type_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('favorite_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'favorite',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orders_id', models.AutoField(primary_key=True, serialize=False)),
                ('orders_prodouct_count', models.IntegerField(blank=True, null=True)),
                ('orders_time', models.CharField(blank=True, max_length=100, null=True)),
                ('orders_all_price', models.CharField(blank=True, max_length=200, null=True)),
                ('orders_paystate', models.IntegerField(blank=True, null=True)),
                ('orders_prodouct_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prodouct',
            fields=[
                ('prodouct_id', models.IntegerField(primary_key=True, serialize=False)),
                ('prodouct_title', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_sort_title', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_image', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_start_time', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_value', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_price', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_ribat', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_bought', models.CharField(blank=True, max_length=11, null=True)),
                ('prodouct_minquota', models.IntegerField()),
                ('prodouct_maxquota', models.IntegerField(blank=True, null=True)),
                ('prodouct_post', models.CharField(blank=True, max_length=200, null=True)),
                ('prodouct_soldout', models.CharField(blank=True, max_length=200, null=True)),
                ('prodouct_tip', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_end_time', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_detail', models.CharField(blank=True, max_length=400, null=True)),
                ('prodouct_is_refund', models.IntegerField(blank=True, null=True)),
                ('prodouct_is_over_time', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'prodouct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('shop_id', models.AutoField(primary_key=True, serialize=False)),
                ('shop_name', models.CharField(blank=True, max_length=400, null=True)),
                ('shop_tel', models.CharField(blank=True, max_length=400, null=True)),
                ('shop_address', models.CharField(blank=True, max_length=400, null=True)),
                ('shop_area', models.CharField(blank=True, max_length=400, null=True)),
                ('shop_open_time', models.CharField(blank=True, max_length=400, null=True)),
                ('shop_lon', models.CharField(blank=True, max_length=200, null=True)),
                ('shop_lat', models.CharField(blank=True, max_length=200, null=True)),
                ('shop_traffic_info', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'shop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('sub_category_id', models.AutoField(primary_key=True, serialize=False)),
                ('sub_category_name', models.CharField(blank=True, max_length=400, null=True)),
            ],
            options={
                'db_table': 'sub_category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('ticket_id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_valid_time', models.CharField(blank=True, max_length=400, null=True)),
                ('ticket_number', models.IntegerField(blank=True, null=True)),
                ('ticket_pwd', models.CharField(blank=True, max_length=200, null=True)),
                ('ticket_is_used', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ticket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(blank=True, max_length=200, null=True)),
                ('user_login_pwd', models.CharField(blank=True, max_length=200, null=True)),
                ('user_pay_pwd', models.CharField(blank=True, max_length=200, null=True)),
                ('user_tel', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
    ]
